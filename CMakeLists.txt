cmake_minimum_required(VERSION 3.13)
project(StopWait)


# # stop_wait make
# SET(CMAKE_C_COMPTLER GCC)
# add_definitions(-std=c++11)
# INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
# aux_source_directory(${PROJECT_SOURCE_DIR}/src SRC_LIST)
# SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
# SET(CMAKE_C_COMPILER "D:/mingw64/bin/gcc")
# SET(CMAKE_CXX_COMPILER "D:/mingw64/bin/g++")
# ADD_EXECUTABLE(stop_wait ${SRC_LIST})
# FIND_LIBRARY(NETSIM_LIB libnetsim.a ${PROJECT_SOURCE_DIR}/lib)
# TARGET_LINK_LIBRARIES(stop_wait  ${NETSIM_LIB})

# # GBN make
# SET(CMAKE_C_COMPTLER GCC)
# add_definitions(-std=c++11)
# INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
# aux_source_directory(${PROJECT_SOURCE_DIR}/GBN GBN_LIST)
# SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
# SET(CMAKE_C_COMPILER "D:/mingw64/bin/gcc")
# SET(CMAKE_CXX_COMPILER "D:/mingw64/bin/g++")
# ADD_EXECUTABLE(GBN ${GBN_LIST})
# FIND_LIBRARY(NETSIM_LIB libnetsim.a ${PROJECT_SOURCE_DIR}/lib)
# TARGET_LINK_LIBRARIES(GBN  ${NETSIM_LIB})


# SR make
# SET(CMAKE_C_COMPTLER GCC)
# add_definitions(-std=c++11)
# INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
# aux_source_directory(${PROJECT_SOURCE_DIR}/SR SR_LIST)
# SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
# SET(CMAKE_C_COMPILER "D:/mingw64/bin/gcc")
# SET(CMAKE_CXX_COMPILER "D:/mingw64/bin/g++")
# ADD_EXECUTABLE(SR ${SR_LIST})
# FIND_LIBRARY(NETSIM_LIB libnetsim.a ${PROJECT_SOURCE_DIR}/lib)
# TARGET_LINK_LIBRARIES(SR  ${NETSIM_LIB})

# TCP make
SET(CMAKE_C_COMPTLER GCC)
add_definitions(-std=c++11)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
aux_source_directory(${PROJECT_SOURCE_DIR}/TCP TCP_LIST)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(CMAKE_C_COMPILER "D:/mingw64/bin/gcc")
SET(CMAKE_CXX_COMPILER "D:/mingw64/bin/g++")
ADD_EXECUTABLE(TCP ${TCP_LIST})
FIND_LIBRARY(NETSIM_LIB libnetsim.a ${PROJECT_SOURCE_DIR}/lib)
TARGET_LINK_LIBRARIES(TCP  ${NETSIM_LIB})

